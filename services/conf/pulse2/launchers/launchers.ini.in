[launchers]
# Pulse2 Launcher path
launcher_path = @sbindir@/pulse2-launcher

## Misc locations ##
# Source directory for push mode
# source_path = /var/lib/pulse2/packages

## Workflow-related commands ##
# global ping command
ping_path = @sbindir@/pulse2-ping
# global inventory command
# inventory_command = export P2SRV=`echo $SSH_CONNECTION | cut -f1 -d\ `; export P2PORT=9999; export http_proxy=""; export ftp_proxy=""; ( [ -x /cygdrive/c/Program\ Files/FusionInventory-Agent/uninstFI.exe ] && /cygdrive/c/Program\ Files/FusionInventory-Agent/perl/bin/perl "C:\Program Files\FusionInventory-Agent\perl\\bin\\fusioninventory-agent" /server=http://$P2SRV:$P2PORT ) || ( [ -x /cygdrive/c/Program\ Files\ \(x86\)/FusionInventory-Agent/uninstFI.exe ] && /cygdrive/c/Program\ Files\ \(x86\)/FusionInventory-Agent/perl/bin/perl "C:\Program Files (x86)\FusionInventory-Agent\perl\\bin\\fusioninventory-agent" /server=http://$P2SRV:$P2PORT ) || ( [ -x /cygdrive/c/Program\ Files/FusionInventory-Agent/fusioninventory-agent.bat ] && /cygdrive/c/Program\ Files/FusionInventory-Agent/fusioninventory-agent.bat /server=http://$P2SRV:$P2PORT ) || ( [ -x /cygdrive/c/Program\ Files\ \(x86\)/FusionInventory-Agent/fusioninventory-agent.bat ] && /cygdrive/c/Program\ Files\ \(x86\)/FusionInventory-Agent/fusioninventory-agent.bat /server=http://$P2SRV:$P2PORT ) || ( [ -x /cygdrive/c/Program\ Files/OCS\ Inventory\ Agent/OCSInventory.exe ] && /cygdrive/c/Program\ Files/OCS\ Inventory\ Agent/OCSInventory.exe /np /server:$P2SRV /pnum:$P2PORT ) || ( [ -x /cygdrive/c/Program\ Files\ \(x86\)/OCS\ Inventory\ Agent/OCSInventory.exe ] && /cygdrive/c/Program\ Files\ \(x86\)/OCS\ Inventory\ Agent/OCSInventory.exe /np /server:$P2SRV /pnum:$P2PORT ) || ( [ -x /usr/bin/ocsinventory-agent ] && /usr/bin/ocsinventory-agent --server=http://$P2SRV:$P2PORT ) || ( [ -x /usr/sbin/ocsinventory-agent ] && /usr/sbin/ocsinventory-agent --server=http://$P2SRV:$P2PORT ) || ( [ -x /usr/local/sbin/ocs_mac_agent.php ] && /usr/local/sbin/ocs_mac_agent.php ) || ( [ -x /usr/local/bin/fusioninventory-agent ] && /usr/local/bin/fusioninventory-agent --server=http://$P2SRV:$P2PORT ) || ( [ -x /usr/bin/fusioninventory-agent ] && /usr/bin/fusioninventory-agent --server=http://$P2SRV:$P2PORT )  || ( [ -x /opt/fusioninventory-agent/fusioninventory-agent ] && /opt/fusioninventory-agent/fusioninventory-agent --server=http://$P2SRV:$P2PORT )
# global reboot command
# reboot_command = /bin/shutdown.exe -f -r 1 || shutdown -r now
# UWF lock/unlock process
# lock_reboot_command = "Dism /online /Enable-Feature /FeatureName:ISKU-UnifiedWriteFilter && /bin/shutdown.exe -f -r 1"
# unlock_reboot_command = "Dism /online /Disable-Feature /FeatureName:ISKU-UnifiedWriteFilter && /bin/shutdown.exe -f -r 1"
# global halt command
# halt_command = /bin/shutdown.exe -f -s 1 || shutdown -h now

## Target on client ##
# target directory on client
# target_path = /tmp
# temp folder name prefix on client
# temp_folder_prefix = MDVPLS

## Foll-proofing ##
# Above this amount of seconds the command will automatically be killed.
# max_command_age = 86400
# Above this amount of seconds a computer will be considered as
# unreachable.
# max_ping_time = 4
# Above this amount of seconds a computer will be considered as without
# ssh installed
# max_probe_time = 20

[daemon]
# the place were we put the daemons's PID files
# pidfile = /var/run/pulse2
# user = root
# group = root
# umask = 0077
# Example of non-root execution settings:
# user = mmc
# group = mmc
# umask = 0007

[wrapper]
# wrapper path
path = @sbindir@/pulse2-output-wrapper
# cap the amount of logs a wrapper can generate (in bytes)
# max_log_size = 512000
# wrapper will quit it process takes longer to complete (in seconds)
# max_exec_time = 21600

[ssh]
# defaultkey is the name of the default SSH key
# default_key = default
# openssl binaries path
# scp_path = /usr/bin/scp
# ssh_path = /usr/bin/ssh
# ssh_agent_path = /usr/bin/ssh-agent
# sshkey_default = /root/.ssh/id_rsa
# sshkey_mysecondkey = /somewhere/my_second_key
# options passed to SSH via "-o"
# ssh_options = LogLevel=ERROR UserKnownHostsFile=/dev/null StrictHostKeyChecking=no Batchmode=yes PasswordAuthentication=no ServerAliveInterval=10 CheckHostIP=no ConnectTimeout=10
# ssh's keyforwarding control: never, always, or let (aka 'let the scheduler decide')
# forward_key = let

[wget]
# wget binary path (on client)
# wget_path = /usr/bin/wget
# wget_options =
# check_certs = False
# resume = True

[rsync]
# rsync_path = /usr/bin/rsync
# resume = True
# set_executable can be yes, no or keep
# set_executable = yes
# set_access can be private, restricted or public
# set_access = private

[wol]
# Pulse2 WOL Path
wol_path = @sbindir@/pulse2-wol
# wol_port = 40000
# wol_bcast = 255.255.255.255

[tcp_sproxy]
# Pulse2 SSH Proxy path
tcp_sproxy_path = @sbindir@/pulse2-tcp-sproxy
# The "external" VNC IP adress
# tcp_sproxy_host =
# The TCP range to attribue to the proxy
# tcp_sproxy_port_range = 8100-8200
# the initial ssh connection to the client timeout
# tcp_sproxy_establish_delay = 60
# the initial VNC connection to the proxy timeout
# tcp_sproxy_connect_delay = 120
# the number of seconds a connection will stay open after the initial handshake
# tcp_sproxy_session_lenght = 3600
# Check the requestor IP address
# tcp_sproxy_check = False
# create_web_proxy = True

[smart_cleaner]
# Pulse2 Smart Cleaner path (on the target); if empty we do not use it
smart_cleaner_path = @bindir@/pulse2-smart-cleaner.sh
# cleaner options, space separated, see doc
# smart_cleaner_options =

[scheduler_01]
# host = 127.0.0.1
# port = 8000
# enablessl = True
# username = username
# password = password
# periodicaly talk to our referent scheduler
# awake_time = 600
# add some randomness in our wake-ups
# awake_incertitude_factor = .2
# if set to yes, do no send results directly after a command completion
# defer_results = no

# Launchers sections, one per launcher
[launcher_01]
# bind = 127.0.0.1
port = 8001
# slots = 300
# username = username
# password = password
# scheduler = scheduler_01
enablessl = True
cacert = /etc/mmc/pulse2/launchers/keys/cacert.pem
localcert = /etc/mmc/pulse2/launchers/keys/privkey.pem
verifypeer = False
# You can override the logger configuration of this launcher with the
# loggconffile option, else the logger configuration from the current file will
# be used.
# logconffile = /etc/mmc/pulse2/launchers/log_launcher_01.ini

[loggers]
keys = root

[handlers]
keys = hand01

[formatters]
keys = form01

[logger_root]
level = NOTSET
handlers = hand01

[handler_hand01]
class = handlers.TimedRotatingFileHandler
level = INFO
formatter = form01
args = ("/var/log/mmc/pulse2-launchers.log", 'midnight', 1, 7)

[formatter_form01]
format = %(asctime)s %(levelname)s %(message)s

